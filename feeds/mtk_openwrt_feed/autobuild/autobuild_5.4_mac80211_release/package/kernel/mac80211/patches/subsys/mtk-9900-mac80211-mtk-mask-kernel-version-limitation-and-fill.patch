From 026c9872e3460f1632b60324e062016887b31134 Mon Sep 17 00:00:00 2001
From: Sujuan Chen <sujuan.chen@mediatek.com>
Date: Fri, 11 Mar 2022 11:34:11 +0800
Subject: [PATCH 9900/9902] mac80211: mtk: mask kernel version limitation and
 fill forward path in kernel 5.4

Signed-off-by: Sujuan Chen <sujuan.chen@mediatek.com>
---
 include/net/mac80211.h    | 2 --
 net/mac80211/driver-ops.h | 2 --
 net/mac80211/iface.c      | 4 ----
 net/mac80211/trace.h      | 2 --
 4 files changed, 10 deletions(-)

diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index b622c76..c6625c2 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -4315,13 +4315,11 @@ struct ieee80211_ops {
 				     struct ieee80211_sta *sta, u8 flowid);
 	int (*set_radar_background)(struct ieee80211_hw *hw,
 				    struct cfg80211_chan_def *chandef);
-#if LINUX_VERSION_IS_GEQ(5,10,0)
 	int (*net_fill_forward_path)(struct ieee80211_hw *hw,
 				     struct ieee80211_vif *vif,
 				     struct ieee80211_sta *sta,
 				     struct net_device_path_ctx *ctx,
 				     struct net_device_path *path);
-#endif
 	int (*set_qos_map)(struct ieee80211_vif *vif,
 			   struct cfg80211_qos_map *qos_map);
 };
diff --git a/net/mac80211/driver-ops.h b/net/mac80211/driver-ops.h
index d4723dc..91ea8b2 100644
--- a/net/mac80211/driver-ops.h
+++ b/net/mac80211/driver-ops.h
@@ -1501,7 +1501,6 @@ static inline void drv_twt_teardown_request(struct ieee80211_local *local,
 	trace_drv_return_void(local);
 }
 
-#if LINUX_VERSION_IS_GEQ(5,10,0)
 static inline int drv_net_fill_forward_path(struct ieee80211_local *local,
 					    struct ieee80211_sub_if_data *sdata,
 					    struct ieee80211_sta *sta,
@@ -1523,7 +1522,6 @@ static inline int drv_net_fill_forward_path(struct ieee80211_local *local,
 
 	return ret;
 }
-#endif
 
 static inline int drv_set_qos_map(struct ieee80211_local *local,
 				  struct ieee80211_sub_if_data *sdata,
diff --git a/net/mac80211/iface.c b/net/mac80211/iface.c
index 138ad79..4b92867 100644
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -875,7 +875,6 @@ static const struct net_device_ops ieee80211_monitorif_ops = {
 
 };
 
-#if LINUX_VERSION_IS_GEQ(5,10,0)
 static int ieee80211_netdev_fill_forward_path(struct net_device_path_ctx *ctx,
 					      struct net_device_path *path)
 {
@@ -933,7 +932,6 @@ out:
 
 	return ret;
 }
-#endif
 
 static const struct net_device_ops ieee80211_dataif_8023_ops = {
 #if LINUX_VERSION_IS_LESS(4,10,0)
@@ -952,9 +950,7 @@ static const struct net_device_ops ieee80211_dataif_8023_ops = {
 #else
 	.ndo_get_stats64 = bp_ieee80211_get_stats64,
 #endif
-#if LINUX_VERSION_IS_GEQ(5,10,0)
 	.ndo_fill_forward_path = ieee80211_netdev_fill_forward_path,
-#endif
 };
 
 static bool ieee80211_iftype_supports_hdr_offload(enum nl80211_iftype iftype)
diff --git a/net/mac80211/trace.h b/net/mac80211/trace.h
index c6fc75e..6b7b46b 100644
--- a/net/mac80211/trace.h
+++ b/net/mac80211/trace.h
@@ -2899,14 +2899,12 @@ TRACE_EVENT(drv_twt_teardown_request,
 	)
 );
 
-#if LINUX_VERSION_IS_GEQ(5,10,0)
 DEFINE_EVENT(sta_event, drv_net_fill_forward_path,
 	TP_PROTO(struct ieee80211_local *local,
 		 struct ieee80211_sub_if_data *sdata,
 		 struct ieee80211_sta *sta),
 	TP_ARGS(local, sdata, sta)
 );
-#endif
 
 TRACE_EVENT(bss_color_bitmap,
 	TP_PROTO(u8 color,
-- 
2.18.0

